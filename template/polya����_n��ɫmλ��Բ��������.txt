LL mod;
LL gcd(LL x, LL y)
{
    return (x) ? gcd(y % x, x) : y;
}
LL pow(LL x, LL y)
{
    LL res = 1LL, temp = x;
    while (y)
    {
        res = (res * x) % mod;
        y--;
    }
    return res;
}
LL calc(LL n, LL m)
{
    LL sum = 0;
    for (LL i = 1LL; i <= m; ++i)
        sum = (sum + pow(n, gcd(i, m))) % mod;
    if (m & 1LL)
    {
        sum = (sum + m * pow(n, (m + 1LL) / 2LL)) % mod;
    }
    else
    {
        sum = (sum + m / 2LL * (pow(n, (m / 2LL + 1LL)) + pow(n, m / 2LL))) % mod;
    }
    return sum;
}
