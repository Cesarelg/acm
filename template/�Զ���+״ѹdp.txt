/*
2011大连现场赛原题
*/
#include <iostream>
#include <cstdio>
#include <cstring>
#define maxn 1050
using namespace std;
int ch[maxn][4], d[maxn], sz, fail[maxn];
char ord[256];
void insert(char *str, int val) {
    int p = 0;
    for (; *str; ++str) {
        if (!ch[p][ord[*str]]) {
            ch[p][ord[*str]] = sz++;
        }
        p = ch[p][ord[*str]];
    }
    d[p] |= (1<<val);
}
int q[maxn];
void ac() {
    memset(q, 0, sizeof(q));
    int l = 1, r = 0;
    for (int i = 0; i < 4; ++i)
        if (ch[0][i]) q[++r] = ch[0][i];
    while (l <= r) {
        int now = q[l++];
        for (int i = 0; i < 4; ++i)
            if (ch[now][i]) {
                q[++r] = ch[now][i];
                fail[ch[now][i]] = ch[fail[now]][i];
                d[ch[now][i]] |= d[ch[fail[now]][i]];
            } else ch[now][i] = ch[fail[now]][i];
    }
}
char str[100010];
int n, l, f[110], p2[11], s[maxn];
bool dp[2][maxn][maxn];
int main() {
    p2[0] = 1;
    for (int i = 1; i <= 10; ++i) p2[i] = p2[i-1]<<1;
    ord['A'] = 0; ord['T'] = 1; ord['C'] = 2; ord['G'] = 3;
    while (scanf("%d%d", &n, &l) == 2) {
        memset(ch, 0, sizeof(ch));
        memset(d, 0, sizeof(d));
        memset(fail, 0, sizeof(fail));
        sz = 1;
        for (int i = 0; i < n; ++i) {
            scanf("%s%d", str, &f[i]);
            insert(str, i);
        }
        memset(s, 0, sizeof(s));
        for (int i = 0; i < p2[n]; ++i)
            for (int j = 0; j < n; ++j)
                if (i&p2[j]) s[i] += f[j];
        ac();
        memset(dp, 0, sizeof(dp));
        int now = 0, next = 1;
        dp[now][0][0] = 1;
        for (int i = 0; i < l; ++i) {
            memset(dp[next], 0, sizeof(dp[next]));
            for (int j = 0; j < sz; ++j)
                for (int k = 0; k < p2[n]; ++k)
                    if (dp[now][j][k]) {
                        for (int t = 0; t < 4; ++t)
                            dp[next][ch[j][t]][k|d[ch[j][t]]] = 1;
                    }
            swap(now, next);
        }
        int ans = -1;
        for (int i = 0; i < p2[n]; ++i)
            for (int j = 0; j < sz; ++j)
                if (dp[now][j][i]) ans = max(ans, s[i]);
        if (ans >= 0) printf("%d\n", ans);
        else printf("No Rabbit after 2012!\n");
    }
    return 0;
}