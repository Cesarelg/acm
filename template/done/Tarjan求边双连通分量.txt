vector<int> map[MAX_N];
int n, m, x, y;
int dfn[MAX_N], low[MAX_N];//low标记双连通分量,1~n
int dindex = 0;
void tarjan(int v, int last)
{
    int u, l = map[v].size();
    dfn[v] = low[v] = ++dindex;
    bool flag = false;
    for (int i = 0; i < l; i++)
    {
        u = map[v][i];
        if ((u == last) && (!flag))
        {
            flag = true;
            continue;
        }
        if (!dfn[u]) tarjan(u, v);
        low[v] = min(low[v], low[u]);
    }
}
void solve()
{
    memset(dfn, 0, sizeof(dfn));
    dindex = 0;
    for (int i = 1; i <= n; i++)
        if (!dfn[i]) tarjan(i, -1);
}